#!/usr/bin/env bash
# ddollar binstub - auto-selects the correct binary from ./dist/

set -e

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DIST_DIR="${SCRIPT_DIR}/dist"

# Detect OS
OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
case "${OS}" in
  linux*)   OS="linux" ;;
  darwin*)  OS="macos" ;;
  mingw*|msys*|cygwin*) OS="windows" ;;
  *)
    echo "❌ Unsupported OS: ${OS}" >&2
    exit 1
    ;;
esac

# Detect architecture
ARCH="$(uname -m)"
case "${ARCH}" in
  x86_64|amd64)   ARCH="x86_64" ;;
  arm64|aarch64)  ARCH="arm64" ;;
  *)
    echo "❌ Unsupported architecture: ${ARCH}" >&2
    exit 1
    ;;
esac

# Build binary name
if [ "${OS}" = "windows" ]; then
  BINARY="ddollar-${OS}-${ARCH}.exe"
else
  BINARY="ddollar-${OS}-${ARCH}"
fi

BINARY_PATH="${DIST_DIR}/${BINARY}"

# Check if binary exists
if [ ! -f "${BINARY_PATH}" ]; then
  echo "❌ Binary not found: ${BINARY_PATH}" >&2
  echo "" >&2
  echo "Available binaries:" >&2
  ls -1 "${DIST_DIR}/" 2>/dev/null || echo "  (none)" >&2
  echo "" >&2
  echo "Run: ./build.sh" >&2
  exit 1
fi

# Execute the binary with all arguments
exec "${BINARY_PATH}" "$@"
